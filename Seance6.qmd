---
title: "Séance 6"
format: html
editor: visual
editor_options: 
  chunk_output_type: console
---

## Enquête PISA

Dans l'enquête PISA, les compétences en mathématiques expriment l'aptitude des élèves de 15 ans à formuler, employer et interpréter des mathématiques dans de multiples contextes, pour décrire, expliquer et prévoir des phénomènes, en comprenant le rôle que les mathématiques jouent dans le monde.

Les compétences à l'écrit expriment la capacité de comprendre, d'utiliser et d'interpréter des textes écrits en vue de réaliser ses objectifs, développer ses connaissances et son potentiel et prendre une part active dans la société. L'indicateur utilisé est le score moyen.

Le statut socio-économique, ou plus précisément le statut économique, social et culturel de l'élève (ESCS) est un indice composite composé à partir de trois indices : le statut socioprofessionnel des parents (basé sur les métiers exercés par les parents), le niveau de formation (nombre d'années d'études) des parents, ainsi que le patrimoine familial. Ce dernier indice inclut lui-même un grand nombre de variables parmi lesquelles les ressources culturelles disponibles dans le foyer (livres), les ressources éducatives (un endroit calme pour travailler, des ouvrages de références ou des logiciels éducatifs) ainsi que d'autres ressources (voiture, connexion internet. . .)


```{r}
# Chargement des packages
library(tidyverse)
library(questionr)

# Chargement des données
pisa <- readRDS("data/pisa.RDS")
```

## Le score de compétences à l'écrit

Représentation du lien entre la position sociale et le score de compétences à l'écrit

```{r}
pisa %>%
  ggplot(
    aes(x = pos_soc,
        y = score_maths,
        weight = poids)) +
  geom_point() +
  geom_smooth(method = "lm") +
  theme_minimal() +
  lims(x = c(-2, 2)) +
  labs(
    title = "Score de compétences à l'écrit selon la position sociale",
    x = "Indice de position sociale",
    y = "Score de compétences à l'écrit",
    caption = "Champ : élèves de 15 ans scolarisé.es en France en 2018 \n
    Source : PISA 2018 (OCDE) | A. POISSONNIER | 2023"
  )

```

L'effet du genre et du statut d'immigration

```{r}
pisa %>%
  summarize(m_score_compecr = wtd.mean(score_compecr, weights = poids),
            .by = sexe)

pisa %>%
  filter(!is.na(immig)) %>%
  summarize(m_score_compecr = wtd.mean(score_compecr, weights = poids),
            .by = immig)
```

Mettre en place un modèle de régression linéaire

```{r}
## Sans la pondération
# On crée un modèle
m1 <- lm(score_compecr ~ pos_soc + sexe + immig, data = pisa)
# La fonction summary permet de calculer les p-values
summary(m1)

## Avec la pondération
# On utilise le package survey
library(survey)
# On crée la base de données pondérée en renseignant le plan d'échantillonnage
pisa_w <-
  svydesign(
    ids = ~ 1, # Argument pour spécifier s'il l'enquête a été faite par grappes
    data = pisa, # Le tableau de données
    weights = pisa$poids # Les poids
  )
# On utilise la fonction du package
# On crée un modèle
m1 <- svyglm(
  score_compecr ~ pos_soc + sexe + immig, # La formule du modèle
  design = pisa_w) # Attention, ici c'est le "design" pisa_w qu'il faut indiquer, et non plus le tableau de données pisa

# La fonction summary permet de calculer les p-values
summary(m1)
```

Est-ce qu'une position sociale élevée garantit de bons résultats pour l'ensemble des lycéen·nes ?

```{r}
# Chez les garçons et chez les filles
m1 <- svyglm(
  score_compecr ~ pos_soc + sexe*immig, # La formule du modèle
  design = pisa_w)
summary(m1)
```

```{r}
# Selon le statut d'immigration
# On recode avant en une variable binaire
pisa <-
  pisa %>% 
  mutate(immig2 = if_else(immig == "Non", "Non", "Oui"))

pisa_w <-
  svydesign(
    ids = ~ 1, # Argument pour spécifier s'il l'enquête a été faite par grappes
    data = pisa, # Le tableau de données
    weights = pisa$poids # Les poids
  )


m1 <- svyglm(
  score_compecr ~ pos_soc*immig2 + sexe, # La formule du modèle
  design = pisa_w)
summary(m1)
```

Est-ce que la liaison linéaire est la plus pertinente ?

```{r}
# Régressions localisées
pisa %>%
  filter(!is.na(immig2)) %>%
  ggplot(
    aes(x = pos_soc,
        y = score_compecr)
  ) +
  geom_point() +
  geom_smooth(
    method = "loess",
    aes(color = immig2,
        weight = poids)
  )
```

En créant des quantiles, soit des classes d'effectifs qui hiérarchisent la population : les 20% les plus favorisés contre les 20% les plus défavorisés.

```{r}
# On crée des 5 quantiles de taille équivalente
# Obtenir la valeur des quantiles
quant_pos_soc <- quantile(pisa$pos_soc, probs = c(0, 0.2, 0.4, 0.6, 0.8, 1), na.rm = T)
# On crée une nouvelle variable
pisa <-
  pisa %>%
  mutate(pos_soc_5c = 
           cut(
             x = pos_soc, 
             breaks = quant_pos_soc,
             labels = c("1er", "2ème", "3ème", "4ème", "5ème")
           )
  )
# On vérifie le recodage
table(pisa$pos_soc_5c)

# Représentation graphique de l'effet de la position sociale selon le statut d'immigration
# Il faut d'abord vérifier les effectifs
table(pisa$pos_soc_5c, pisa$immig)
table(pisa$pos_soc_5c, pisa$immig2)

# On refait la base pondérée puisqu'on a ajouté une variable au tableau brut
pisa_w <-
  svydesign(
    ids = ~ 1, # Argument pour spécifier s'il l'enquête a été faite par grappes
    data = pisa, # Le tableau de données
    weights = pisa$poids # Les poids
  )

# Création des boxplots
pisa %>%
  filter(!is.na(pos_soc_5c) &
           !is.na(immig2)) %>%
  ggplot() +
  geom_boxplot(
    aes(x = score_compecr,
        color = pos_soc_5c,
        y = immig2)
  )
```

Modèle de régression linéaire avec effet d'interaction dichotimisé

```{r}
m1 <- svyglm(score_compecr ~ pos_soc_5c*immig2 + sexe, design = pisa_w)
summary(m1)
```

## Le redoublement

Tableau croisé de la position sociale et du redoublement et test du khi2

```{r}
wtd.table(pisa$pos_soc_5c, pisa$redouble, pisa$poids) %>%
  rprop()

svychisq(~ redouble+pos_soc_5c, design = pisa_w)
```

Modèle de régression logistique avec la position sociale

```{r}
m1 <- svyglm(redouble ~ pos_soc_5c, 
             family = binomial("logit"),
             design = pisa_w)
summary(m1)
```

Avec la position sociale, indépendamment des résultats en maths

```{r}
m2 <- svyglm(redouble ~ pos_soc_5c +
               score_maths, 
             family = binomial("logit"),
             design = pisa_w)
summary(m2)
```

Avec la position sociale, le sexe, le statut d'immigration et indépendamment des résultats en maths

```{r}
m3 <- svyglm(redouble ~ pos_soc_5c +
               score_maths +
               sexe + 
               immig2, 
             family = binomial("logit"),
             design = pisa_w)
summary(m3)
```

Même chose mais avec le score en compréhension écrite en variable de contrôle

```{r}
m4 <- svyglm(redouble ~ pos_soc_5c +
               score_compecr +
               sexe + 
               immig2, 
             family = binomial("logit"),
             design = pisa_w)
summary(m4)
```

Finalement, on crée un modèle incorporant les 2 variables de contrôle malgré leur très forte corrélation. Cela viole une hypothèse importante des modèles qui requiert que les variables explicatives ne soient pas colinéaires (corrélées entre elles). Cela se justifie uniquement parce qu'elles servent de variables de contrôle et qu'on ne cherche pas à interpréter la valeur et la significativité de leur coefficient.

```{r}
m5 <- svyglm(redouble ~ pos_soc_5c +
               score_compecr +
               score_maths +
               sexe + 
               immig2, 
             family = binomial("logit"),
             design = pisa_w)
summary(m5)
```
